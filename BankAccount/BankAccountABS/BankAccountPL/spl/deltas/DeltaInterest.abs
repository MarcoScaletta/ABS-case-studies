delta DeltaInterest when Interest {

	modifies interface AccountI{
	    adds Int getInterest();
		//@ensures (getBalance() >= 0 ==> \result >= 0) && (getBalance() <= 0 ==> \result <= 0)
	    adds Int calculateInterest();
	    adds Int setInterest(Int newInterest);

	}

	modifies class Account {

		adds [Final] Int INTEREST_RATE = 2;
		adds Int interest = 0;

		adds Int calculateInterest() { //BP-method
			return balance * INTEREST_RATE / 36500;
		}

		//@ensures \result == this.interest
		adds Int getInterest(){ //BP-method
			return this.interest; 
		}

		//@ensures this.interest == newInterest
		adds Int setInterest(Int newInterest){ //BP-method
				this.interest = newInterest;
		}

	}

	modifies class Application {
	
		/*@ensures (\old(account.getBalance(), l) >= 0 ==> account.getInterest() >= \old(account.getInterest(), l)) && 
		  @		   (\old(account.getBalance(), l) <= 0 ==> account.getInterest() <= \old(account.getInterest(), l))
		  @*/
		modifies void nextDay() { //COBP
			l:original();
			account.setInterest(account.calculateInterest() + account.getInterest());
		}

		// remodeled because of the contract
		//@ensures account.getBalance() == \old(account.getBalance()) + \old(account.getInterest()) && account.getInterest() == 0
		modifies void nextYear() { //BP-method
			account.setBalance(account.getBalance() + account.getInterest());
			account.setInterest(0);
		}
	}
}