delta DeltaDailyLimit when DailyLimit{

	modifies interface AccountI{
		adds //@invariant getWithdraw() >= getDailyLimit();
		//@assignable \strictly_nothing;
		adds Int getWithdraw();
		
		//@ensures getWithdraw() == newWithdraw;
	    adds Int setWithdraw(Int newWithdraw);

	    //@ensures \result == -1000;
		//@assignable \strictly_nothing;
	    adds Int getDailyLimit();
	}

	modifies class Account{

		adds Int withdraw = 0;

		//@ensures (!\result ==> withdraw == \old(withdraw)) && ( \result ==> withdraw <= \old(withdraw));
		modifies Boolean update(Int x) { //COBP
			Int newWithdraw = withdraw;
			if (x < 0)  {
				newWithdraw += x;
				if (newWithdraw < getDailyLimit()) 
					return false;
			}
			if (!original(x))
				return false;
			withdraw = newWithdraw;
			return true;
		}

		adds Int getDailyLimit(){ //BP-method
			return -1000;
		}

		adds Int getWithdraw(){ //BP-method
		    return this.withdraw; 
	   }
		adds Int setWithdraw(Int newWithdraw){ //BP-method
		    this.withdraw = newWithdraw;
	   }
			
	}

	modifies class Application {
		
		 //@ensures account.getWithdraw(0);
		 modifies void nextDay() { //COBP
			original();
			account.setWithdraw(0);
		}
	
	}
}