delta DeltaDailyLimit when DailyLimit{

	modifies interface AccountI{
	   adds Int getWithdraw();
	   adds Int setWithdraw(Int newWithdraw);
	}

	modifies class Account{

		adds invariant withdraw >= DAILY_LIMIT;

		adds Int DAILY_LIMIT = -1000;
		adds Int withdraw = 0;

		[Ensures((!\result ==> withdraw == \old(withdraw)) && 
				 ( \result ==> withdraw <= \old(withdraw)))]
		[changes behavior] modifies Boolean update(Int x) {
		Int newWithdraw = withdraw;
			if (x < 0)  {
				newWithdraw += x;
				if (newWithdraw < DAILY_LIMIT) 
					return false;
			}
			if (!original(x))
				return false;
			withdraw = newWithdraw;
			return true;
		}

		
	   [static] adds Int getWithdraw(){
		    return this.withdraw; 
	   }
	   [static] adds Int setWithdraw(Int newWithdraw){
		    this.withdraw = newWithdraw;
	   }
			
	}

	modifies class Application {
		
		 [Ensures(account.withdraw == 0)]
		 [changes behavior] modifies void nextDay() {
			original();
			account.withdraw = 0;
		}
	
	}
}