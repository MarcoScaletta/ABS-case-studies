
data WaterLevel = Low, Normal, High;

interface EnvironmentI {

	/*@ 
	  @ public normal_behavior
	  @ ensures (\old(this.getWaterLevel()) == WaterLevel.high) ==> (this.getWaterLevel() == WaterLevel.normal) && 
	  @ 	    (\old(this.getWaterLevel()) == WaterLevel.normal) ==> (this.getWaterLevel() == WaterLevel.low);
	  @ assignable \dl_env_fields;
	  @ */
	Unit lowerWaterLevel();

	/*@ 
	  @ public normal_behavior
	  @ ensures (\old(this.getWaterLevel()) == WaterLevel.low) ==> (this.getWaterLevel() == WaterLevel.normal) &&
	  @ 	    (\old(this.getWaterLevel()) == WaterLevel.normal) ==> (this.getWaterLevel() == WaterLevel.high); 
	  @ */
	Unit waterRise();

	/*@
	  @ ensures this.isMethaneLevelCritical() == !\old(this.isMethaneLevelCritical());
	  @ */
	Unit changeMethaneLevel();

	Bool isMethaneLevelCritical();

	WaterLevel getWaterLevel();

}

public class Environment implements EnvironmentI {

	WaterLevel waterLevel = Normal;

	Bool methaneLevelCritical = False;

	Unit lowerWaterLevel() {
        if(waterLevel == High)
			waterLevel = Normal;
        else if(waterLevel == Normal)
			waterLevel = Low;
	}

	Unit waterRise() {
        if(waterLevel == Low)
			waterLevel = Normal;
        else if(waterLevel == Normal)
			waterLevel = High;
	}

	Unit changeMethaneLevel() {
		methaneLevelCritical = !methaneLevelCritical;
	}

	Bool isMethaneLevelCritical() {
		return methaneLevelCritical;
	}

	WaterLevel getWaterLevel() {
		return waterLevel;
	}

}